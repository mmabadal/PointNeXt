
---- OLD CALLS ----

CUDA_VISIBLE_DEVICES=0 python examples/segmentation/main.py --cfg cfgs/s3dis/pointnext-s.yaml
CUDA_VISIBLE_DEVICES=0 bash script/main_segmentation.sh cfgs/s3dis/pointnext-s.yaml wandb.use_wandb=False mode=test --pretrained_path log/s3dis/s3dis-train-pointnext-s-ngpus1-20240412-095302-frbazgqEBvroUaNLVjXUzB/checkpoint/s3dis-train-pointnext-s-ngpus1-20240412-095302-frbazgqEBvroUaNLVjXUzB_ckpt_best.pth visualize=True

---- NEW CALLS ----

params in config:

dataset:
  common:
    NAME: PIPES
    voxel_size: 0.01
model:
  cls_args:
    num_classes: 3
batch_size: 8
val_batch_size: 1
epochs: 100
early: 9999
points: 6000
num_classes: 3
classes: ['floor', 'pipe', 'valve']
cmap: [[0, 0, 0], [0, 255, 0], [0, 0, 255]]
num_per_class: [242967508, 19798250, 4955829]
cls_weighed_loss: False
optimizer:
 NAME: 'adamw'
 weight_decay: 1.0e-4
min_lr: 1.0e-5
lr: 0.01
log_dir: 'pipes'

CUDA_VISIBLE_DEVICES=0 python examples/segmentation/train.py --cfg cfgs/pipes/pointnext-s-pipes.yaml --path_trainval data/pipes/pool/split_1/ --path_test data/pipes/pool/test/ --run_name "s-001"
CUDA_VISIBLE_DEVICES=0 python examples/segmentation/inference.py --path_model log/pipes/s-001/ --path_test data/pipes/pool/test/
CUDA_VISIBLE_DEVICES=0 python examples/segmentation/inference_online.py --path_model log/pipes/s-001-sub6k/ --path_test data/pipes/pool/test_online/ --path_out log/pipes/s-001-sub6k/visualization_online

---- THINGS DONE -----

 - download + install pointnext
 - download s3dis data
 - train with s3dis data - (train/val to train and then inference over subsampled test) 
 - inference over test


 - adapt net
 - adapt data
  
 - s - l - xl
 
 - loop - epoch
 
 - early stopping - reverted
 
 - weights

 - sub points

 - online inference

  
---- ADAPT NEW DATASET ----
  
 * cfgs/xxxx/xxxxx.yaml
  	- NAME: PIPES
  	- batch_size: 8
  	- val_batch_size: 1
  	- epochs: 100
  	- early: 2
  	- num_classes: 3
	- classes: ['floor', 'pipe', 'valve']
	- cmap: [[0, 0, 0], [0, 255, 0], [0, 0, 255]]
	- log_dir: 'pipes'
  
 * PointNext/openpoints/dataset/__init__.py
  	- from .pipes import PIPES
  	
 * PointNext/openpoints/dataset/xxx/__init__.py
  	- from .pipes import PIPES
  	
 * PointNext/openpoints/dataset/xxx/xxx.py
	- class PIPES(Dataset):
	- classes = ['floor',
	             'pipe',
	             'valve']

	- num_classes = 3
	- num_per_class = np.array([242967508, 19798250, 4955829], dtype=np.int32)  # TODO weights
	- class2color = {'floor':      [0, 0, 0],
		   	  'pipe':	[0, 255, 0],
		   	  'valve':	[0, 0, 255]}
	- data_root: str = 'data/pipes/pool',


