# data augmentation
dataset:
  common:
    NAME: PIPES
    voxel_size: 0.01
  train:
    split: train
    voxel_max: 24000
    loop: 1  # here, the training has been looped 30 times. therefore, the training epochs do not need much. # TODO PQ X30 TRAIN DATA??
    presample: False
  val:
    split: val
    voxel_max: null
    presample: True 
  test:
    split: test
    voxel_max: null
    presample: False 

model:
  NAME: BaseSeg
  encoder_args:
    NAME: PointNextEncoder
    blocks: [1, 3, 5, 3, 3]
    strides: [1, 4, 4, 4, 4]
    sa_layers: 1 
    sa_use_res: False 
    width: 32
    in_channels: 4
    expansion: 4
    radius: 0.1
    nsample: 32
    aggr_args:
      feature_type: 'dp_fj'
      reduction: 'max'
    group_args:
      NAME: 'ballquery'
      normalize_dp: True
    conv_args:
      order: conv-norm-act
    act_args:
      act: 'relu'
    norm_args:
      norm: 'bn'
  decoder_args:
    NAME: PointNextDecoder
  cls_args:
    NAME: SegHead
    num_classes: 3     # -----
    in_channels: null
    norm_args:
      norm: 'bn'

batch_size: 2           # -----
val_batch_size: 1

epochs: 100
early: 9999
points: 12000

feature_keys: x,heights

num_classes: 3
classes: ['floor', 'pipe', 'valve']
cmap: [[0, 0, 0], [0, 255, 0], [0, 0, 255]]
num_per_class: [242967508, 19798250, 4955829]

dataloader:
  num_workers: 6

# ---------------------------------------------------------------------------- #
# Training cfgs
# ---------------------------------------------------------------------------- #
val_fn: validate
ignore_index: null 

cls_weighed_loss: False

criterion_args:
  NAME: CrossEntropy
  label_smoothing: 0.2

optimizer:
 NAME: 'adamw'  # performs 1 point better than adam
 weight_decay: 1.0e-4

# lr_scheduler:
sched: cosine
warmup_epochs: 0

min_lr: 1.0e-5 #
lr: 0.01 # LR linear rule.

grad_norm_clip: 10
use_voting: False


# ---------------------------------------------------------------------------- #
# io and misc
# ---------------------------------------------------------------------------- #
log_dir: 'pipes'
save_freq: -1 # save epoch every xxx epochs, -1 only save last and best. 
val_freq: 1


# do not conduct rotation in small model.
datatransforms:
  train: [ChromaticAutoContrast, PointsToTensor, PointCloudScaling, PointCloudXYZAlign, PointCloudJitter, ChromaticDropGPU, ChromaticNormalize]
  val: [PointsToTensor, PointCloudXYZAlign, ChromaticNormalize]
  vote: [ChromaticDropGPU]
  kwargs:
    color_drop: 0.2
    gravity_dim: 2
    scale: [0.9, 1.1]
    jitter_sigma: 0.005
    jitter_clip: 0.02

wandb:
  project: PointNeXt-S3DIS
